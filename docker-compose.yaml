version: '3.5'
services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackend-crystal:latest
    build:
      context: ./
      # dockerfile: ./src/main/docker/Dockerfile.native
      dockerfile: ./src/main/docker/Dockerfile.jvm
    environment:
      - QUARKUS_DATASOURCE_USERNAME=sarah
      - QUARKUS_DATASOURCE_PASSWORD=connor
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/mydatabase
    hostname: api1
    depends_on:
      - postgres
    expose:
      - "3000"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2:
    <<: *api
    hostname: api2

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  postgres: # Banco de dados
    image: docker.io/postgres
    environment:
      - POSTGRES_PASSWORD=connor
      - POSTGRES_USER=sarah
      - POSTGRES_DB=mydatabase
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d mydatabase -U sarah -p connor"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
